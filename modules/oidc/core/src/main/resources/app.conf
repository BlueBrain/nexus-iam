# All application specific configuration should reside here
app {
  # The service description namespace
  description {
    # The name of the service
    name = "iam"
    # The environment where this machine is running
    environment = "local"
    environment = ${?ENVIRONMENT}
  }

  # Service instance specific settings
  instance {
    # The default interface to bind to
    interface = 127.0.0.1
    interface = ${?BIND_INTERFACE}
  }

  # Http binding settings
  http {
    # The interface to bind to
    interface = ${app.instance.interface}
    # The port to bind to
    port = 8080
    port = ${?BIND_PORT}
    # The default uri prefix
    prefix = "v0"
    prefix = ${?HTTP_PREFIX}
    # The service public uri
    public-uri = "http://localhost:8080"
    public-uri = ${?PUBLIC_URI}
  }

  # Service runtime settings
  runtime {
    # Arbitrary Future completion timeout
    default-timeout = 10 seconds
  }

  # Cluster specific settings
  cluster {
    # Duration after which actors are shutdown if they have no interaction
    passivation-timeout = 10 seconds
    passivation-timeout = ${?PASSIVATION_TIMEOUT}
    # Total number of shards in the cluster
    shards = 30
    seeds = ${?SEED_NODES}
  }

  # OIDC connectivity settings
  oidc {
    # The OIDC server discovery URI used for discovering its endpoints
    discovery-uri = ${OIDC_DISCOVERY_URI}
    # The platform client id used for authenticating to the server
    client-id = ${OIDC_CLIENT_ID}
    # The platform client secret used for authenticating to the server
    client-secret = ${OIDC_CLIENT_SECRET}
    # The authorization scope
    scopes = ["openid"]
    # This application's token uri
    token-uri = ${app.http.public-uri}"/"${app.http.prefix}"/oauth2/token"
    token-uri = ${?TOKEN_URI}
  }
}

akka {
  extensions += "akka.cluster.ddata.DistributedData"
  log-dead-letters = off
  loglevel = INFO
  loglevel = ${?LOG_LEVEL}

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  cluster {
    min-nr-of-members = 1
    sharding.state-store-mode = ddata
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = 127.0.0.1
      hostname = ${?REMOTING_INTERFACE}
      hostname = ${?override.remoting.interface}
      port = 2552
      port = ${?REMOTING_PORT}
      port = ${?override.remoting.port}
    }
  }
}